# escape=`

# Use the latest Windows Server Core 2022 image.
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Set environment variables
ENV DOTNET_ROOT="c:\Program Files\dotnet"

# Download and install Git
RUN powershell -Command `
    Invoke-WebRequest -Uri https://github.com/git-for-windows/git/releases/download/v2.33.0.windows.2/Git-2.33.0.2-64-bit.exe -OutFile Git-2.33.0.2-64-bit.exe ; `
    Start-Process -Wait -FilePath .\Git-2.33.0.2-64-bit.exe -ArgumentList '/VERYSILENT /NORESTART /NOCANCEL /SP-' ; `
    Remove-Item -Force Git-2.33.0.2-64-bit.exe

# Download and install CMake
RUN powershell -Command `
    Invoke-WebRequest -Uri 'https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-windows-x86_64.zip' -OutFile 'cmake.zip' ; `
    Expand-Archive -Path 'cmake.zip' -DestinationPath 'C:\CMake' ; `
    Remove-Item -Force cmake.zip

# Set environment variable for Cmake
RUN setx /M PATH "%PATH%;C:\CMake\cmake-3.22.1-windows-x86_64\bin"

# Download and install WiX Toolset v3.14.1
RUN powershell -Command `
    Invoke-WebRequest -Uri 'https://github.com/wixtoolset/wix3/releases/download/wix3141rtm/wix314-binaries.zip' -OutFile 'wix314-binaries.zip' ; `
    Expand-Archive -Path 'wix314-binaries.zip' -DestinationPath 'C:\wixtoolset' ; `
    Remove-Item -Force 'wix314-binaries.zip'

# Set environment variable for wix
RUN setx /M PATH "%PATH%;C:\wixtoolset"

# Restore the default Windows shell for correct batch processing
SHELL ["cmd", "/S", "/C"]

RUN `
    # Download the Build Tools bootstrapper.
    curl -SL --output vs_buildtools.exe https://aka.ms/vs/17/release/vs_buildtools.exe `
    `
    # Install Build Tools with the Microsoft VisualStudio.
    && (start /w vs_buildtools.exe --quiet --wait --norestart --nocache `
        --installPath "%ProgramFiles(x86)%\Microsoft Visual Studio\2022\BuildTools" `
        --add Microsoft.VisualStudio.Workload.NativeDesktop `
        --add Microsoft.VisualStudio.Component.Windows10SDK `
        --add Microsoft.VisualStudio.Component.Windows10SDK.20348 `
        --add Microsoft.VisualStudio.ComponentGroup.NativeDesktop.Core `
        --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 `
        --add Microsoft.VisualStudio.Component.VC.Tools.arm `
        --add Microsoft.VisualStudio.Component.VC.Tools.arm64 `
        --add Microsoft.VisualStudio.ComponentGroup.UWP.VC `
        --add Microsoft.Component.MSBuild `
        || IF "%ERRORLEVEL%"=="3010" EXIT 0) `
    `
    # Cleanup
    && del /q vs_buildtools.exe

# Set environment variable for MSBuild tool
RUN setx /M PATH "%PATH%;C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin"

# Clone vcpkg from GitHub and bootstrap it
RUN git clone https://github.com/microsoft/vcpkg.git c:/vcpkg/
RUN c:\vcpkg\bootstrap-vcpkg.bat

# Copy the declaration of package version
COPY src\vcpkg.json c:/odbcdriver/

# Set environment variable for vcpkg
RUN setx /M PATH "%PATH%;C:\vcpkg"

# Install vcpkg packages
RUN cd odbcdriver && `
    vcpkg install

ARG ARCH
ARG release_script="build_win_release$ARCH.ps1"
ARG debug_script="build_win_debug$ARCH.ps1"

# Copy the scripts and misc from the root
COPY $release_script $debug_script LICENSE LICENSE.txt THIRD-PARTY README.md c:/odbcdriver/

# Copy src and misc folders
COPY src c:/odbcdriver/src/
COPY scripts c:/odbcdriver/scripts/
COPY libraries c:/odbcdriver/libraries/

# Run the script
WORKDIR c:\odbcdriver
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'Continue';"]
RUN .\build_win_release64.ps1

# Restore the default Windows shell for correct batch processing
SHELL ["cmd", "/S", "/C"]

# Create the .msi file
RUN msbuild .\build\odbc\cmake\PACKAGE.vcxproj -p:Configuration=Release

WORKDIR c:\

# Move .msi file to c:/output
RUN mkdir output
RUN move c:\odbcdriver\build\odbc\cmake\*.msi \output